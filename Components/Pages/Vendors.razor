@page "/vendors"

@inherits NeocoreComponent

@inject VendorRepository VendorRepository
@inject ItemRepository ItemRepository
@inject NavigationManager Nav

<div class="col col-md-6 me-auto">
    <FilterComponent 
        TEntity="Item"
        SelectedId="ItemId"
        Entities="ItemList"
        EntityId="@(e => e.Id)"
        EntityName="@(v => $"[{v.Id}] {v.Name}")"
        OnEntityFilter="UpdateQueryItem"
        Label="By delivered item:"
        ZeroLabel="All" 
    />
</div>

<h3 class="mt-2">
    Vendors
    <a href="/vendor" class="btn btn-sm ms-2 py-1 btn-success">+ New</a>
</h3>

<QuickGrid class="nc-grid" Items="VendorSummaries.AsQueryable()" Pagination="paginationState">
    <TemplateColumn class="nc-narrow" Title="Id"
        SortBy="GridSort<VendorSummary>.ByAscending(s => s.Vendor == null ? null : s.Vendor.Id)">
        <a href="vendor/@context.Vendor?.Id">@context.Vendor?.Id</a>
    </TemplateColumn>
    <PropertyColumn Property="s => s.Vendor.Name" Sortable="true" />
    <TemplateColumn Title="Contact info" SortBy="GridSort<VendorSummary>.ByDescending(s => s.Vendor.ContactInfo)">
        @context.Vendor.ContactInfo
    </TemplateColumn>
    <TemplateColumn Title="Total contracts" SortBy="GridSort<VendorSummary>.ByDescending(s => s.TotalContracts)">
        <a href="/contracts?vendor=@context.Vendor?.Id">@context.TotalContracts</a>
    </TemplateColumn>
    <TemplateColumn Title="Total distinct items" SortBy="GridSort<VendorSummary>.ByDescending(s => s.TotalDistinctItems)">
        <a href="/items?vendor=@context.Vendor?.Id">@context.TotalDistinctItems</a>
    </TemplateColumn>    
    <TemplateColumn Title="Total items quantity" SortBy="GridSort<VendorSummary>.ByDescending(s => s.TotalItemsQuantity)">
        <a href="/items?vendor=@context.Vendor?.Id">@context.TotalItemsQuantity</a>
    </TemplateColumn>
    <TemplateColumn Title="Items were in repair" SortBy="GridSort<VendorSummary>.ByDescending(s => s.ItemsRepairedQuantity)">
        <span>@context.ItemsRepairedQuantity</span>
    </TemplateColumn>
    <TemplateColumn Title="Reliability (%)" SortBy="GridSort<VendorSummary>.ByDescending(s => s.Reliability)">
        <span>@context.Reliability.ToString("F2")</span>
    </TemplateColumn>
    <Paginator State="paginationState"/>
</QuickGrid>

@code {
    private PaginationState paginationState = new() { ItemsPerPage = 10 };

    public List<VendorSummary> VendorSummaries { get; set; } = new();
    public List<Item> ItemList { get; set; } = new();

    [Parameter]
    [SupplyParameterFromQuery(Name = "item")]
    public int ItemId { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (!IsPrerendering)
        {
            if (ItemList.Count <= 0)
                ItemList = [.. await ItemRepository.FindAll()];

            VendorSummaries = ItemId > 0
                ? [.. await VendorRepository.FindWithSummaryByItem(ItemId)]
                : [.. await VendorRepository.FindAllWithSummary()];
        }
        
        await base.OnParametersSetAsync();
    }

    public void UpdateQueryItem(int itemId)
    {
        Nav.NavigateTo(
            Nav.GetUriWithQueryParameters(
                new Dictionary<string, object?>()
                    {
                        { "item", itemId > 0 ? itemId : null },
                    }
            )
        );
    }
}
