@page "/vendors"

@inherits NeocoreComponent

@inject IVendorRepository VendorRepository

<h3 class="mt-2">
    Vendors
    <a href="/vendor" class="btn btn-sm ms-2 py-1 btn-success">+ New</a>
</h3>

<QuickGrid class="nc-grid" Items="VendorSummaries.AsQueryable()" Pagination="paginationState">
    <TemplateColumn class="nc-narrow" Title="Id"
        SortBy="GridSort<VendorSummary>.ByAscending(s => s.Vendor == null ? null : s.Vendor.Id)">
        <a href="vendor/@context.Vendor?.Id">@context.Vendor?.Id</a>
    </TemplateColumn>
    <PropertyColumn Property="s => s.Vendor.Name" Sortable="true" />
    <TemplateColumn Title="Contact info" SortBy="GridSort<VendorSummary>.ByDescending(s => s.Vendor.ContactInfo)">
        @context.Vendor.ContactInfo
    </TemplateColumn>
    <TemplateColumn Title="Total contracts" SortBy="GridSort<VendorSummary>.ByDescending(s => s.TotalContracts)">
        <a href="/contracts?vendor=@context.Vendor?.Id">@context.TotalContracts</a>
    </TemplateColumn>
    <TemplateColumn Title="Total items" SortBy="GridSort<VendorSummary>.ByDescending(s => s.TotalItems)">
        <a href="/items?vendor=@context.Vendor?.Id">@context.TotalItems</a>
    </TemplateColumn>
    <TemplateColumn Title="Items were in repair" SortBy="GridSort<VendorSummary>.ByDescending(s => s.ItemsRepaired)">
        <span>@context.ItemsRepaired</span>
    </TemplateColumn>
    <TemplateColumn Title="Reliability (%)" SortBy="GridSort<VendorSummary>.ByDescending(s => s.Reliability)">
        <span>@context.Reliability.ToString("F2")</span>
    </TemplateColumn>
    <Paginator State="paginationState"/>
</QuickGrid>

@code {
    private PaginationState paginationState = new() { ItemsPerPage = 10 };

    public List<VendorSummary> VendorSummaries { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        if (!IsPrerendering)
        {
            VendorSummaries = [.. await VendorRepository.FindAllWithSummary()];
        }
        
        await base.OnInitializedAsync();
    }
}
