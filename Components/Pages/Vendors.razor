@page "/vendors"

@inherits NeocoreComponent

@rendermode InteractiveServer

@inject VendorRepository VendorRepository

<h3>Vendors SUMMARY</h3>

<QuickGrid class="nc-grid" Items="VendorSummaries.AsQueryable()" Pagination="paginationState">
    <PropertyColumn Property="s => s.Vendor.Name" Sortable="true" />
    <PropertyColumn Property="s => s.Vendor.ContactInfo" />
    <TemplateColumn Title="TotalContracts" Sortable="true" SortBy="GridSort<VendorSummary>.ByDescending(s => s.TotalContracts)">
        <a href="/contracts?vendor=@context.Vendor?.Id">@context.TotalContracts</a>
    </TemplateColumn>
    <TemplateColumn Title="TotalItems" Sortable="true" SortBy="GridSort<VendorSummary>.ByDescending(s => s.TotalItems)">
        <a href="/items?vendor=@context.Vendor?.Id">@context.TotalItems</a>
    </TemplateColumn>
    <Paginator State="paginationState"/>
</QuickGrid>

@code {
    private PaginationState paginationState = new() { ItemsPerPage = 10 };

    public List<VendorSummary> VendorSummaries { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        if (!IsPrerendering)
        {
            // Console.WriteLine("ULTRA HEAVY REQUEST " + Guid.NewGuid());
            VendorSummaries = [.. await VendorRepository.FindAllWithSummary()];
        }
        
        // Vendors = [.. await VendorRepository.FindAll()];
        // ComponentVendors = [.. await VendorRepository.FindByItemType("Component")];

        await base.OnInitializedAsync();
    }
}
